@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model List<Hotel>
@{
    ViewData["Title"] = "Hotel List";
    var currentUser = await UserManager.GetUserAsync(User);
    bool isAdmin = await UserManager.IsInRoleAsync(currentUser, "Admin");
    var userHotelPreferences = currentUser.HotelPreferences;
    var matchingHotels = Model.Where(hotel => userHotelPreferences.Split(',').Any(pref => hotel.Amenities.Contains(pref))).ToList();
}

<style>
    .title-bar {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        margin-bottom: 20px;
    }

    .title {
        margin-top: 20px;
    }

    .create-hotel-btn {
        margin-top: 20px;
        margin-left: 10px;
        padding: 5px 10px;
        font-size: 14px;
    }
</style>

@if (isAdmin)
{
    <div class="title-bar">
        <h2 class="title">Hotel</h2>
        <a class="btn btn-outline-secondary create-hotel-btn" asp-action="Create">Add Hotel</a>
    </div>
}
else
{
    <div class="title-bar">
        <h2 class="title">Hotel</h2>
    </div>
}

<form id="hotelSearchForm" asp-controller="Hotel" asp-action="Index" method="get">
    <div class="row">
        <div class="input-group">
            <input type="text" class="form-control" id="name" name="name" placeholder="Search by Name">
            <input type="text" class="form-control" id="location" name="location" placeholder="Search by Location">
            <select class="form-control" id="sortOrder" name="sortOrder">
                <option value="">Order By Price</option>
                <option value="price_asc">Low to High</option>
                <option value="price_desc">High to Low</option>
            </select>
            <button type="submit" class="btn btn-primary" style="width: 100px;">Apply</button>
        </div>
    </div>
</form>



@if (!Model.Any())
{
    <p>No Hotels Available</p>
}
else
{
    <div class="row mt-4">
        @if (matchingHotels.Any())
        {
            <div id="bestMatchesContainer">
                @foreach (var hotel in matchingHotels)
                {

                }
            </div>
        }

    </div>
}

<div id="hotelSearchResults" class="row mt-4">
</div>



@section Scripts {
    <script src="~/js/hotelListings.js"></script>
}